main {
  padding-top: 2.5rem;
}

.testimonial {
  font-size: 1.2rem;
}

/*.testimonial__list {
    width: 80%;
    margin: auto;
  }*/

.testimonial__image-container {
  width: 60%;
  max-width: 40rem;
  box-shadow: 3px 3px 5px 3px rgba(0, 0, 0, 0.3);
  transform: skew(20deg);
  overflow: hidden;
  /*sets the desired behavior for an element's overflow i.e. when an element's content is too big to fit in its block formatting context in both directions.*/
}

#customer-1:hover .testimonial__image-container {
  animation: flip-customer 1s ease-out forwards;
}

.testimonial__image {
  width: 100%;
  vertical-align: top; /*sets vertical alignment of an inline, inline-block or table-cell box. In this case to avoid the whitespace when shadow*/
  transform: skew(-20deg) scale(1.4); /*put our image like a rhombus and scales it 1.4*/
}

.testimonial__info {
  text-align: right;
  padding: 0.9rem;
}

#customer-2.testimonial {
  text-align: right;
}

#customer-2 .testimonial__info {
  text-align: left;
}

.testimonial__name {
  margin: 0.2rem;
  color: #ff5454;
  font-size: 2rem;
}

.testimonial__subtitle {
  margin: 0;
  font-size: 1.1rem;
  color: #ccc;
}

.testimonial__subtitle a {
  color: inherit;
  text-decoration: none;
}

.testimonial__subtitle a:hover,
.testimonial__subtitle a:active {
  color: #7a7a7a;
}

.testimonial__text {
  margin: 0.2rem;
  /*font-variant: small-caps; /*capitalize all, the default capital letters in the text are bigger*/
  /*font-stretch: ultra-condensed;*/
  /*letter-spacing: 5px;*/
  /*white-space: normal;*/
}

/*if our viewport is 40rem min-width, then applies these styles*/
@media (min-width: 40rem) {
  .testimonial {
    margin: 3rem auto;
    max-width: 1500px; /*allows to rezise the width of our testimonial class element to 1500px as max*/
    display: flex; /*The element behaves like a block element and lays out its content according to the flexbox model.    */
    align-items: center; /*In Flexbox, it controls the alignment of items on the Cross Axis*/
    justify-content: space-around; /*defines how the browser distributes space between and around content items along the main-axis of a flex container,*/
    /*With space-around The items are evenly distributed within the alignment container along the main axis. The spacing between each pair of adjacent items is the same. 
    The empty space before the first and after the last item equals half of the space between each pair of adjacent items.*/
  }

  .testimonial__image-container {
    width: 66%;
  }

  .testimonial__info {
    width: 30%;
  }
}

@keyframes flip-customer {
  /*controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence.*/
  0% {
    /*initial state*/
    transform: rotateY(0) skew(20deg);
  }
  50% {
    /*50% state*/
    transform: rotateY(160deg) skew(20deg);
  }
  100% {
    /*final state*/
    transform: rotateY(360deg) skew(20deg);
  }
}
